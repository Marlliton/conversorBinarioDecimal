[{"/media/marlliton/Documents/Projetos/meusProjetos/conversorBinarioDecimal/converter/src/index.js":"1","/media/marlliton/Documents/Projetos/meusProjetos/conversorBinarioDecimal/converter/src/App.jsx":"2"},{"size":499,"mtime":1606227076987,"results":"3","hashOfConfig":"4"},{"size":2114,"mtime":1606248289513,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iminhz",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/media/marlliton/Documents/Projetos/meusProjetos/conversorBinarioDecimal/converter/src/index.js",[],"/media/marlliton/Documents/Projetos/meusProjetos/conversorBinarioDecimal/converter/src/App.jsx",["11"],"import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nconst initialState = {\n    bin: '',\n    result: ''\n}\n\nexport default class App extends Component {\n\n    state = { ...initialState }\n\n    getBin(event) {\n        const bin = event.target.value\n        this.setState({ bin })\n    }\n\n    convert() {\n        let bin = this.state.bin\n        if (bin === \"\") alert(\"Por favor, digite uma sequencia binária!\")\n        bin.split('').map((char) => {\n            if (char !== '0' && char !== '1') {\n                alert(\"Por favor, digite uma sequencia binária!\")\n                bin = \"\"        \n            }\n        })\n        console.log(bin)\n        const decimal = parseInt(bin, 2)\n        this.setState({ result: decimal })\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <h1>Conversor de Números binários</h1>\n                <div className=\"center\">\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"basic-addon1\">Número binário</span>\n                        </div>\n                        <input type=\"text\" className=\"form-control inputBin\" placeholder=\"Digite aqui!\" onChange={e => this.getBin(e)} />\n                    </div>\n\n\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text pr-5 \">Resultado</span>\n                        </div>\n                        <textarea readOnly=\"true\" className=\"form-control\" aria-label=\"Resultado\" value={this.state.result}></textarea>\n                    </div>\n                    <div className=\"row d-flex justify-content-center\">\n                        <button className=\"btn btn-primary mt-3 btn-lg medio\" onClick={() => this.convert()}>\n                            Calcular\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\n",{"ruleId":"12","severity":1,"message":"13","line":22,"column":34,"nodeType":"14","messageId":"15","endLine":22,"endColumn":36},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]